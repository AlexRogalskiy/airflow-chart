############################
## Astronomer configuration
## For local Kubernetes development
## There should be an A record on *.local.astronomer-development.com
## with the value 127.0.0.1 and you should set up
## the secrets and TLS cert normally.
############################

tags:
  platform: true
  logging: false
  monitoring: false
  kubed: true

global:
  # Base domain for all subdomains exposed through ingress
  baseDomain: local.astronomer-development.com

  # Name of secret containing TLS certificate
  tlsSecret: astronomer-tls

############################
## Astronomer configuration
## Configure resouce requests
## as small as possible
############################

astronomer:
  orbit:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"
    limits:
      cpu: "100m"
  houston:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"
      limits:
        cpu: "500m"

    config:
      auth:
        local:
          enabled: true
  prisma:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"
  commander:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"
      limits:
        cpu: "100m"
  registry:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"
  install:
    resources:
      requests:
        cpu: "0m"
        memory: "0Mi"


#################################
## Nginx configuration
#################################
nginx:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "100m"
      memory: "2048Mi"

#################################
## Grafana configuration
#################################
grafana:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "100m"

#################################
## Prometheus configuration
#################################
prometheus:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Gi"
    limits:
      cpu: "100m"
      memory: "2Gi"

#################################
## Elasticsearch configuration
#################################
elasticsearch:
  # Configure client nodes
  client:
    replicas: 1
    resources:
      heapMemory: 256
      requests:
        cpu: "0"
        memory: "256Mi"

  # Configure data nodes
  data:
    replicas: 1
    resources:
      heapMemory: 128
      requests:
        cpu: "0"
        memory: "128Mi"
      limits:
        cpu: "100m"
    persistence:
      size: 1Gi

  # Configure master nodes
  master:
    replicas: 1
    resources:
      heapMemory: 128
      requests:
        cpu: "0"
        memory: "128Mi"
      limits:
        cpu: "100m"
    env:
      NUMBER_OF_MASTERS: "1"
    persistence:
      size: 1Gi

  curator:
    enabled: false

#################################
## Kibana configuration
#################################
kibana:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "100m"


#################################
## Fluentd configuration
#################################
fluentd:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "100m"

#################################
## Kube State configuration
#################################
kubeState:
  # Configure resources
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "100m"
